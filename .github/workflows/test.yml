name: Test

on:
  push:
    branches:
      - master
      - renovate/**
  pull_request:
  merge_group:

permissions:
  contents: read

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_CACHE: remote:rw
  TURBO_SCM_BASE: ${{ github.event.merge_group.base_sha || github.event.pull_request.base.sha || github.event.before }}

jobs:
  deploy-sentry:
    name: Deploy Sentry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies ðŸ“¦
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Build
        run: pnpm exec turbo web#build

      - name: Create Sentry release
        uses: getsentry/action-release@v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          sourcemaps: apps/web/build
  deploy:
    name: Deploy Cloudflare Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies ðŸ“¦
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Build
        run: pnpm exec turbo web#build

      - name: Deploy
        run: pnpm exec wrangler pages deploy --branch=${{ github.head_ref || github.ref_name  }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  test-e2e:
    name: Test E2E
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.53.0-jammy
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies ðŸ“¦
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Test E2E
        run: pnpm -w test-e2e
        env:
          HOME: /root
          TURBO_SCM_HEAD: ${{ github.event.merge_group.head_sha || github.event.pull_request.head.sha || github.event.head }}

  typecheck:
    runs-on: ubuntu-latest
    name: Typecheck
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies ðŸ“¦
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Typecheck
        run: pnpm -w check

  knip:
    runs-on: ubuntu-latest

    name: Knip
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies ðŸ“¦
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Relay
        run: pnpm exec turbo relay router paraglide

      - name: Knip
        run: pnpm exec turbo knip

  boundaries:
    runs-on: ubuntu-latest

    name: Boundaries
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies ðŸ“¦
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Boundaries
        run: pnpm -w boundaries
  doctor:
    runs-on: ubuntu-latest

    name: Doctor
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Doctor
        run: pnpm doctor
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        iteration: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

    name: Test
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies ðŸ“¦
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Test
        run: pnpm exec turbo test

  stryker:
    runs-on: ubuntu-latest
    name: Coverage
    steps:
      - uses: actions/checkout@v4
        with:
          filter: blob:none
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: "pnpm"

      - name: Install dependencies ðŸ“¦
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Coverage
        run: pnpm exec turbo stryker
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_KEY }}
