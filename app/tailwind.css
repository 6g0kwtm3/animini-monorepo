@import 'tailwindcss';

@config '../tailwind.config.ts';

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
	button {
		cursor: unset;
	}

	@media (prefers-reduced-motion: no-preference) {
		:focus-visible {
			@apply outline outline-offset-4 outline-primary transition-[outline-offset] duration-md ease-emphasized-accelerate;
		}
	}
}

/* ::view-transition-old(root),
::view-transition-new(root) {
	animation: none;
} */

::view-transition-old(media-cover),
::view-transition-new(media-cover) {
	/* Prevent the default animation,
  so both views remain opacity:1 throughout the transition */
	animation: none;
	/* Use normal blending,
  so the new view sits on top and obscures the old view */
	mix-blend-mode: normal;
	/* Make the height the same as the group,
  meaning the view size might not match its aspect-ratio. */
	height: 100%;
	/* Clip any overflow of the view */
	overflow: clip;
}

/* The old view is the thumbnail */
::view-transition-old(media-cover) {
	/* Maintain the aspect ratio of the view,
  by shrinking it to fit within the bounds of the element */
	object-fit: contain;
	background-size: contain;
}

/* The new view is the full image */
::view-transition-new(media-cover) {
	/* Maintain the aspect ratio of the view,
  by growing it to cover the bounds of the element */
	object-fit: cover;
	background-size: cover;
}
